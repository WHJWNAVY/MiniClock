C51 COMPILER V9.59.0.0   DRV_CFG                                                           05/06/2019 23:08:41 PAGE 1   


C51 COMPILER V9.59.0.0, COMPILATION OF MODULE DRV_CFG
OBJECT MODULE PLACED IN .\Objects\drv_cfg.obj
COMPILER INVOKED BY: C:\Keil\C51\BIN\C51.EXE src\drv_cfg.c OMF2 OPTIMIZE(8,SPEED) BROWSE INCDIR(.\src) DEBUG PRINT(.\Lis
                    -tings\drv_cfg.lst) TABS(2) OBJECT(.\Objects\drv_cfg.obj)

line level    source

   1          #include "drv_cfg.h"
   2          
   3          //测试工作频率为24MHz
   4          
   5          #if 0
              sfr     IAP_DATA    =   0xC2;
              sfr     IAP_ADDRH   =   0xC3;
              sfr     IAP_ADDRL   =   0xC4;
              sfr     IAP_CMD     =   0xC5;
              sfr     IAP_TRIG    =   0xC6;
              sfr     IAP_CONTR   =   0xC7;
              #endif
  13          
  14          #define WAIT_TIME_30M          0x80
  15          #define WAIT_TIME_24M          0x81
  16          #define WAIT_TIME_20M          0x82
  17          #define WAIT_TIME_12M          0x83
  18          #define WAIT_TIME_6M           0x84
  19          #define WAIT_TIME_3M           0x85
  20          #define WAIT_TIME_2M           0x86
  21          #define WAIT_TIME_1M           0x87
  22          
  23          #define WAIT_TIME              WAIT_TIME_24M
  24          
  25          //Start address for STC8F2K16S2 EEPROM
  26          #define IAP_EEPROM_START_ADDR           (0x0000)
  27          #define IAP_EEPROM_END_ADDR             (0xBFFF)
  28          #define IAP_EEPROM_PAGE_SIZE            (512)//扇区大小512字节
  29          #define CONFIG_SAVE_FLAG_LEN            (5)
  30          #define CONFIG_FLAG_HEAD_ADD            (IAP_EEPROM_START_ADDR)
  31          #define CONFIG_SAVE_ADDRESS             (CONFIG_FLAG_HEAD_ADD + CONFIG_SAVE_FLAG_LEN)
  32          #define CONFIG_FLAG_TAIL_ADD(len)       (CONFIG_SAVE_ADDRESS + (len))
  33          uint8 code CONFIG_SAVE_FLAG[CONFIG_SAVE_FLAG_LEN+1] =  {"WNAVY"};
  34          
  35          void eeprom_iap_idle()
  36          {
  37   1          IAP_CONTR = 0;                              //关闭IAP功能
  38   1          IAP_CMD = 0;                                //清除命令寄存器
  39   1          IAP_TRIG = 0;                               //清除触发寄存器
  40   1          IAP_ADDRH = 0x80;                           //将地址设置到非IAP区域
  41   1          IAP_ADDRL = 0;
  42   1      }
  43          
  44          uint8 eeprom_iap_read(uint16 addr)
  45          {
  46   1          uint8 dat;
  47   1      
  48   1          IAP_CONTR = WAIT_TIME;                         //使能IAP
  49   1          IAP_CMD = 1;                                //设置IAP读命令
  50   1          IAP_ADDRL = addr;                           //设置IAP低地址
  51   1          IAP_ADDRH = addr >> 8;                      //设置IAP高地址
  52   1          IAP_TRIG = 0x5a;                            //写触发命令(0x5a)
  53   1          IAP_TRIG = 0xa5;                            //写触发命令(0xa5)
  54   1          _nop_();
C51 COMPILER V9.59.0.0   DRV_CFG                                                           05/06/2019 23:08:41 PAGE 2   

  55   1          dat = IAP_DATA;                             //读IAP数据
  56   1          eeprom_iap_idle();                                  //关闭IAP功能
  57   1      
  58   1          return dat;
  59   1      }
  60          
  61          void eeprom_iap_program(uint16 addr, uint8 dat)
  62          {
  63   1          IAP_CONTR = WAIT_TIME;                      //使能IAP
  64   1          IAP_CMD = 2;                                //设置IAP写命令
  65   1          IAP_ADDRL = addr;                           //设置IAP低地址
  66   1          IAP_ADDRH = addr >> 8;                      //设置IAP高地址
  67   1          IAP_DATA = dat;                             //写IAP数据
  68   1          IAP_TRIG = 0x5a;                            //写触发命令(0x5a)
  69   1          IAP_TRIG = 0xa5;                            //写触发命令(0xa5)
  70   1          _nop_();
  71   1          eeprom_iap_idle();                          //关闭IAP功能
  72   1      }
  73          
  74          void eeprom_iap_erase(uint16 addr)
  75          {
  76   1          IAP_CONTR = WAIT_TIME;                      //使能IAP
  77   1          IAP_CMD = 3;                                //设置IAP擦除命令
  78   1          IAP_ADDRL = addr;                           //设置IAP低地址
  79   1          IAP_ADDRH = addr >> 8;                      //设置IAP高地址
  80   1          IAP_TRIG = 0x5a;                            //写触发命令(0x5a)
  81   1          IAP_TRIG = 0xa5;                            //写触发命令(0xa5)
  82   1          _nop_();                                    //
  83   1          eeprom_iap_idle();                          //关闭IAP功能
  84   1      }
  85          
  86          
  87          #if 0
              void main()
              {
                  eeprom_iap_erase(0x0400);
                  P0 = eeprom_iap_read(0x0400);                //P0=0xff
                  eeprom_iap_program(0x0400, 0x12);
                  P1 = eeprom_iap_read(0x0400);                //P1=0x12
              
                  while (1);
              }
              #endif
  98          
  99          /*****************************************************************************
 100           函 数 名  : cfgsave_flagwrite
 101           功能描述  : 检查保存在配置文件头部区的校验标志
 102           输入参数  : cfglen     配置文件的大小(长度)
 103           输出参数  : 无
 104           返 回 值  : RTN_OK-成功，RTN_ERR-失败
 105          *****************************************************************************/
 106          uchar cfgsave_flagchk(uchar cfglen)
 107          {
 108   1          uint i;
 109   1      
 110   1          if(cfglen <= 0)
 111   1          {
 112   2              return RTN_ERR;
 113   2          }
 114   1          
 115   1          delay_xus(100);
 116   1          for (i=0; i<CONFIG_SAVE_FLAG_LEN; i++)//check the config save flag
C51 COMPILER V9.59.0.0   DRV_CFG                                                           05/06/2019 23:08:41 PAGE 3   

 117   1          {
 118   2              //check the head flag
 119   2              if (eeprom_iap_read(CONFIG_FLAG_HEAD_ADD + i) != CONFIG_SAVE_FLAG[i])
 120   2              {
 121   3                  return RTN_ERR;
 122   3              }
 123   2      
 124   2              //check the tail flag
 125   2              if (eeprom_iap_read(CONFIG_FLAG_TAIL_ADD(cfglen) + i) != CONFIG_SAVE_FLAG[i])
 126   2              {
 127   3                  return RTN_ERR;
 128   3              }
 129   2          }
 130   1      
 131   1          return RTN_OK;
 132   1      }
 133          
 134          /*****************************************************************************
 135           函 数 名  : cfgsave_flagwrite
 136           功能描述  : 在配置文件头部区加入校验标志
 137           输入参数  : cfglen     配置文件的大小(长度)
 138           输出参数  : 无
 139           返 回 值  : RTN_OK-成功，RTN_ERR-失败
 140          *****************************************************************************/
 141          uchar cfgsave_flagwrite(uchar cfglen)
 142          {
 143   1          uint i;
 144   1      
 145   1          if(cfglen <= 0)
 146   1          {
 147   2              return RTN_ERR;
 148   2          }
 149   1          
 150   1          delay_xus(100);
 151   1          for (i=0; i<CONFIG_SAVE_FLAG_LEN; i++)
 152   1          {
 153   2              //write the head flag
 154   2              eeprom_iap_program(CONFIG_FLAG_HEAD_ADD + i, (uchar)(CONFIG_SAVE_FLAG[i]));
 155   2              //write the tail flag
 156   2              eeprom_iap_program(CONFIG_FLAG_TAIL_ADD(cfglen) + i, (uchar)(CONFIG_SAVE_FLAG[i])); 
 157   2          }
 158   1      
 159   1      
 160   1          return RTN_OK;
 161   1      }
 162          
 163          /*****************************************************************************
 164           函 数 名  : cfgsave_read
 165           功能描述  : 从内部eeprom中读取配置
 166           输入参数  : len    要读区的配置区的长度(字节)
 167           输出参数  : config 指向保存配置的指针
 168           返 回 值  : RTN_OK-成功，RTN_ERR-失败
 169          *****************************************************************************/
 170          uchar cfgsave_read(uchar* config, uint len)
 171          {
 172   1          uint i;
 173   1      
 174   1          if((config == NULL) || (len <= 0))
 175   1          {
 176   2              return RTN_ERR;
 177   2          }
 178   1      
C51 COMPILER V9.59.0.0   DRV_CFG                                                           05/06/2019 23:08:41 PAGE 4   

 179   1          if(cfgsave_flagchk(len) != RTN_OK)//check the config save flag
 180   1          {
 181   2              return RTN_ERR;
 182   2          }
 183   1      
 184   1          delay_xus(100);
 185   1      
 186   1          for(i=0; i<len; i++)
 187   1          {
 188   2              //config[i] = eeprom_iap_read(CONFIG_SAVE_ADDRESS + i);
 189   2              *(config + i) = eeprom_iap_read(CONFIG_SAVE_ADDRESS + i);
 190   2          }
 191   1      
 192   1          return RTN_OK;
 193   1      }
 194          
 195          /*****************************************************************************
 196           函 数 名  : cfgsave_write
 197           功能描述  : 把配置保存到内部eeprom中
 198           输入参数  : config 指向保存配置的指针
 199                       len    要读区的配置区的长度(字节)
 200           输出参数  : 无
 201           返 回 值  : RTN_OK-成功，RTN_ERR-失败
 202          *****************************************************************************/
 203          uchar cfgsave_write(uchar* config, uint len)
 204          {
 205   1          uint i;
 206   1      
 207   1          if((config == NULL) || (len <= 0))
 208   1          {
 209   2              return RTN_ERR;
 210   2          }
 211   1      
 212   1          delay_xus(100);
 213   1      
 214   1          eeprom_iap_erase(CONFIG_FLAG_HEAD_ADD);
 215   1          cfgsave_flagwrite(len);//write flag at the head and tail of the config
 216   1      
 217   1          delay_xus(100);
 218   1      
 219   1          for(i=0; i<len; i++)
 220   1          {
 221   2              eeprom_iap_program(CONFIG_SAVE_ADDRESS + i, (uchar)(*(config + i)));
 222   2          }
 223   1      
 224   1          return RTN_OK;
 225   1      }


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    452    ----
   CONSTANT SIZE    =      6    ----
   XDATA SIZE       =   ----    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =   ----      14
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
   EDATA SIZE       =   ----    ----
   HDATA SIZE       =   ----    ----
   XDATA CONST SIZE =   ----    ----
   FAR CONST SIZE   =   ----    ----
END OF MODULE INFORMATION.

C51 COMPILER V9.59.0.0   DRV_CFG                                                           05/06/2019 23:08:41 PAGE 5   


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
