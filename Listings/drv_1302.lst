C51 COMPILER V9.59.0.0   DRV_1302                                                          01/14/2019 02:22:01 PAGE 1   


C51 COMPILER V9.59.0.0, COMPILATION OF MODULE DRV_1302
OBJECT MODULE PLACED IN .\Objects\drv_1302.obj
COMPILER INVOKED BY: C:\Keil\C51\BIN\C51.EXE src\drv_1302.c OMF2 OPTIMIZE(8,SPEED) BROWSE INCDIR(.\src) DEBUG PRINT(.\Li
                    -stings\drv_1302.lst) TABS(2) OBJECT(.\Objects\drv_1302.obj)

line level    source

   1          #include "drv_1302.h"
   2          
   3          sbit DS1302_SCK    = P2 ^ 0;
   4          sbit DS1302_IO     = P2 ^ 1;
   5          sbit DS1302_CE     = P2 ^ 2;
   6          
   7          uchar code write_add[7] = {0x8c, 0x8a, 0x88, 0x86, 0x84, 0x82, 0x80};//ds1302写时间地址,年周月日时分秒
   8          uchar code read_add[7]  = {0x8d, 0x8b, 0x89, 0x87, 0x85, 0x83, 0x81};//ds1302读时间地址,年周月日时分秒
   9          
  10          uchar code alarm_wr[7] =  {0xc0, 0xc2, 0xc4, 0xc6, 0xc8, 0xca, 0xcc};//ds1302写寄存器地址,年周月日时分秒
  11          uchar code alarm_rd[7] =  {0xc1, 0xc3, 0xc5, 0xc7, 0xc9, 0xcb, 0xcd};//ds1302读寄存器地址,年周月日时分秒
  12          uchar code alarm_on[2] =  {0xce, 0xcf};//0-write, 1-read
  13          
  14          #define ALARM_FLAG_ON   0xF0
  15          #define ALARM_FLAG_OFF  0X0F
  16          
  17          /*****************************************************************************
  18           函 数 名  : ds1302_write_byte
  19           功能描述  : 模拟IIC时序,向ds1302写入一个字节
  20           输入参数  : dat    待写入的数据
  21           输出参数  : 无
  22           返 回 值  : 无
  23          *****************************************************************************/
  24          static void ds1302_write_byte(uchar dat)
  25          {
  26   1          uchar i;
  27   1          for(i = 0; i < 8; i++)
  28   1          {
  29   2              DS1302_SCK = 0;
  30   2              DS1302_IO = dat & 0x01;
  31   2              dat = dat >> 1;
  32   2              DS1302_SCK = 1;
  33   2          }
  34   1      }
  35          
  36          /*****************************************************************************
  37           函 数 名  : ds1302_write
  38           功能描述  : 向ds1302指定寄存器写入一个字节
  39           输入参数  : add    ds1302寄存器地址
  40                       dat    待写入的数据
  41           输出参数  : 无
  42           返 回 值  : 无
  43          *****************************************************************************/
  44          static void ds1302_write(uchar add, uchar dat)
  45          {
  46   1          DS1302_CE = 0;
  47   1          _nop_();
  48   1          DS1302_SCK = 0;
  49   1          _nop_();
  50   1          DS1302_CE = 1;
  51   1          _nop_();
  52   1          ds1302_write_byte(add);
  53   1          ds1302_write_byte(dat);
  54   1          DS1302_CE = 0;
C51 COMPILER V9.59.0.0   DRV_1302                                                          01/14/2019 02:22:01 PAGE 2   

  55   1          _nop_();
  56   1          DS1302_IO = 1;
  57   1          DS1302_SCK = 1;
  58   1      }
  59          
  60          /*****************************************************************************
  61           函 数 名  : ds1302_read
  62           功能描述  : 从ds1302指定寄存器读取一个字节
  63           输入参数  : add    ds1302寄存器地址
  64           输出参数  : 无
  65           返 回 值  : 读取到的值
  66          *****************************************************************************/
  67          static uchar ds1302_read(uchar add)
  68          {
  69   1          uchar i, value;
  70   1          DS1302_CE = 0;
  71   1          _nop_();
  72   1          DS1302_SCK = 0;
  73   1          _nop_();
  74   1          DS1302_CE = 1;
  75   1          _nop_();
  76   1          ds1302_write_byte(add);
  77   1          for(i = 0; i < 8; i++)
  78   1          {
  79   2              value = value >> 1;
  80   2              DS1302_SCK = 0;
  81   2              if(DS1302_IO)
  82   2                  value = value | 0x80;
  83   2              DS1302_SCK = 1;
  84   2          }
  85   1          DS1302_CE = 0;
  86   1          _nop_();
  87   1          DS1302_SCK = 0;
  88   1          _nop_();
  89   1          DS1302_SCK = 1;
  90   1          DS1302_IO = 1;
  91   1          return value;
  92   1      }
  93          
  94          /*****************************************************************************
  95           函 数 名  : rtc_set_time
  96           功能描述  : 设置当前时间
  97           输入参数  : time   要设置的时间
  98           输出参数  : 无
  99           返 回 值  : 无
 100          *****************************************************************************/
 101          void rtc_set_time(rtc_time_t* time)
 102          {
 103   1          uchar i = 0, j = 0;
 104   1          uchar rtc_time[7] = {0};
 105   1      
 106   1          rtc_time[0] = ((time->year > 99) ? 99 : time->year);//0-99
 107   1          rtc_time[1] = ((time->week > 7) ? 7 : \
 108   1                         ((time->week < 1) ? 1 : time->week));//1-7
 109   1          rtc_time[2] = ((time->month > 12) ? 12 : \
 110   1                         ((time->month < 1) ? 1 : time->month));//1-12
 111   1          rtc_time[3] = ((time->day > 31) ? 31 : \
 112   1                         ((time->day < 1) ? 1 : time->day));//1-31
 113   1          rtc_time[4] = ((time->hour > 23) ? 23 : time->hour);//0-23,设置或读取为24小时制时间
 114   1          rtc_time[5] = ((time->minute > 59) ? 59 : time->minute);//0-59
 115   1          rtc_time[6] = ((time->second > 59) ? 59 : time->second);//0-59
 116   1      
C51 COMPILER V9.59.0.0   DRV_1302                                                          01/14/2019 02:22:01 PAGE 3   

 117   1          //把十进制数据转换成BCD码
 118   1          for(i = 0; i < 7; i++)
 119   1          {
 120   2              j = rtc_time[i] / 10;
 121   2              rtc_time[i] = rtc_time[i] % 10;
 122   2              rtc_time[i] = rtc_time[i] + j * 16;
 123   2          }
 124   1      
 125   1          rtc_time[4] = rtc_time[4] & 0x3f;   /* force clock to 24 hour mode */
 126   1          rtc_time[6] = rtc_time[6] & 0x7f;   /* Enable clock oscillator */
 127   1      
 128   1          ds1302_write(0x8e, 0x00);//去除写保护
 129   1          for(i = 0; i < 7; i++)
 130   1          {
 131   2              ds1302_write(write_add[i], rtc_time[i]);
 132   2          }
 133   1          ds1302_write(0x8e, 0x80);//加写保护
 134   1      }
 135          
 136          /*****************************************************************************
 137           函 数 名  : rtc_read_time
 138           功能描述  : 获取当前时间
 139           输入参数  : void
 140           输出参数  : time   读取到的闹钟时间
 141           返 回 值  : 无
 142          *****************************************************************************/
 143          void rtc_read_time(rtc_time_t* time)
 144          {
 145   1          uchar rtc_time[7] = {0};
 146   1          uchar i, temp;
 147   1          for(i = 0; i < 7; i++)
 148   1          {
 149   2              rtc_time[i] = ds1302_read(read_add[i]);
 150   2              //把BCD码转换成十进制数据
 151   2              temp = rtc_time[i] / 16;
 152   2              rtc_time[i] = rtc_time[i] % 16;
 153   2              rtc_time[i] = rtc_time[i] + temp * 10;
 154   2          }
 155   1      
 156   1          time->year      = ((rtc_time[0] > 99) ? 99 : rtc_time[0]);//0-99
 157   1          time->week      = ((rtc_time[1] > 7) ? 7 : \
 158   1                             ((rtc_time[1] < 1) ? 1 : rtc_time[1]));//1-7
 159   1          time->month     = ((rtc_time[2] > 12) ? 12 : \
 160   1                             ((rtc_time[2] < 1) ? 1 : rtc_time[2]));//1-12
 161   1          time->day       = ((rtc_time[3] > 31) ? 31 : \
 162   1                             ((rtc_time[3] < 1) ? 1 : rtc_time[3]));//1-31
 163   1          time->hour      = ((rtc_time[4] > 23) ? 23 : rtc_time[4]);//0-23,设置或读取为24小时制时间
 164   1          time->minute    = ((rtc_time[5] > 59) ? 59 : rtc_time[5]);//0-59
 165   1          time->second    = ((rtc_time[6] > 59) ? 59 : rtc_time[6]);//0-59
 166   1      }
 167          
 168          void rtc_init(void)
 169          {
 170   1        #if 0
                rtc_time_t time_t = {0};
                rtc_read_time(&time_t);
                rtc_set_time(&time_t);
                #endif
 175   1      }
 176          
 177          /*****************************************************************************
 178           函 数 名  : alarm_set_time
C51 COMPILER V9.59.0.0   DRV_1302                                                          01/14/2019 02:22:01 PAGE 4   

 179           功能描述  : 设置闹钟时间
 180           输入参数  : time   要设置的闹钟时间
 181           输出参数  : 无
 182           返 回 值  : 无
 183          *****************************************************************************/
 184          void alarm_set_time(rtc_time_t* time)
 185          {
 186   1          uchar i = 0, j = 0;
 187   1          uchar rtc_time[7] = {0};
 188   1      
 189   1          rtc_time[0] = ((time->year > 99) ? 99 : time->year);//0-99
 190   1          rtc_time[1] = ((time->week > 7) ? 7 : \
 191   1                         ((time->week < 1) ? 1 : time->week));//1-7
 192   1          rtc_time[2] = ((time->month > 12) ? 12 : \
 193   1                         ((time->month < 1) ? 1 : time->month));//1-12
 194   1          rtc_time[3] = ((time->day > 31) ? 31 : \
 195   1                         ((time->day < 1) ? 1 : time->day));//1-31
 196   1          rtc_time[4] = ((time->hour > 23) ? 23 : time->hour);//0-23
 197   1          rtc_time[5] = ((time->minute > 59) ? 59 : time->minute);//0-59
 198   1          rtc_time[6] = ((time->second > 59) ? 59 : time->second);//0-59
 199   1      
 200   1          //把十进制数据转换成BCD码
 201   1          for(i = 0; i < 7; i++)
 202   1          {
 203   2              j = rtc_time[i] / 10;
 204   2              rtc_time[i] = rtc_time[i] % 10;
 205   2              rtc_time[i] = rtc_time[i] + j * 16;
 206   2          }
 207   1      
 208   1          rtc_time[4] = rtc_time[4] & 0x3f;   /* force clock to 24 hour mode */
 209   1          rtc_time[6] = rtc_time[6] & 0x7f;   /* Enable clock oscillator */
 210   1      
 211   1          ds1302_write(0x8e, 0x00);//去除写保护
 212   1          for(i = 0; i < 7; i++)
 213   1          {
 214   2              ds1302_write(alarm_wr[i], rtc_time[i]);
 215   2          }
 216   1          ds1302_write(0x8e, 0x80);//加写保护
 217   1      }
 218          
 219          /*****************************************************************************
 220           函 数 名  : alarm_read_time
 221           功能描述  : 获取闹钟时间
 222           输入参数  : 无
 223           输出参数  : time   要设置的闹钟时间
 224           返 回 值  : 无
 225          *****************************************************************************/
 226          void alarm_read_time(rtc_time_t* time)
 227          {
 228   1          uchar rtc_time[7] = {0};
 229   1          uchar i, temp;
 230   1          for(i = 0; i < 7; i++)
 231   1          {
 232   2              rtc_time[i] = ds1302_read(alarm_rd[i]);
 233   2              //把BCD码转换成十进制数据
 234   2              temp = rtc_time[i] / 16;
 235   2              rtc_time[i] = rtc_time[i] % 16;
 236   2              rtc_time[i] = rtc_time[i] + temp * 10;
 237   2          }
 238   1      
 239   1          time->year      = ((rtc_time[0] > 99) ? 99 : rtc_time[0]);//0-99
 240   1      
C51 COMPILER V9.59.0.0   DRV_1302                                                          01/14/2019 02:22:01 PAGE 5   

 241   1          time->week      = ((rtc_time[1] > 7) ? 7 : \
 242   1                             ((rtc_time[1] < 1) ? 1 : rtc_time[1]));//1-7
 243   1          time->month     = ((rtc_time[2] > 12) ? 12 : \
 244   1                             ((rtc_time[2] < 1) ? 1 : rtc_time[2]));//1-12
 245   1          time->day       = ((rtc_time[3] > 31) ? 31 : \
 246   1                             ((rtc_time[3] < 1) ? 1 : rtc_time[3]));//1-31
 247   1          time->hour      = ((rtc_time[4] > 23) ? 23 : rtc_time[4]);//0-23
 248   1          time->minute    = ((rtc_time[5] > 59) ? 59 : rtc_time[5]);//0-59
 249   1          time->second    = ((rtc_time[6] > 59) ? 59 : rtc_time[6]);//0-59
 250   1      }
 251          
 252          /*****************************************************************************
 253           函 数 名  : alarm_set_flag
 254           功能描述  : 设置闹钟开关
 255           输入参数  : b      闹钟开启标志
 256           输出参数  : 无
 257           返 回 值  : 无
 258          *****************************************************************************/
 259          void alarm_set_flag(uchar b)
 260          {
 261   1          uchar i = 0, j = 0; 
 262   1          uchar flag = (b ? ALARM_FLAG_ON : ALARM_FLAG_OFF);
 263   1      
 264   1          //把十进制数据转换成BCD码
 265   1          j = flag / 10;
 266   1          flag = flag % 10;
 267   1          flag = flag + j * 16;
 268   1      
 269   1          ds1302_write(0x8e, 0x00);//去除写保护
 270   1          ds1302_write(alarm_on[0], flag);
 271   1          ds1302_write(0x8e, 0x80);//加写保护
 272   1      }
 273          
 274          /*****************************************************************************
 275           函 数 名  : alarm_get_flag
 276           功能描述  : 获取闹钟开关
 277           输入参数  : 无
 278           输出参数  : 无
 279           返 回 值  : 闹钟开启标志
 280          *****************************************************************************/
 281          uchar alarm_get_flag(void)
 282          {
 283   1          uchar flag = 0, temp = 0;
 284   1          flag = ds1302_read(alarm_on[1]);
 285   1          //把BCD码转换成十进制数据
 286   1          temp = flag / 16;
 287   1          flag = flag % 16;
 288   1          flag = flag + temp * 10;
 289   1      
 290   1          return ((flag == ALARM_FLAG_ON) ? 1 : 0);
 291   1      }


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =   1619    ----
   CONSTANT SIZE    =     58    ----
   XDATA SIZE       =   ----    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =   ----      45
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
   EDATA SIZE       =   ----    ----
C51 COMPILER V9.59.0.0   DRV_1302                                                          01/14/2019 02:22:01 PAGE 6   

   HDATA SIZE       =   ----    ----
   XDATA CONST SIZE =   ----    ----
   FAR CONST SIZE   =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
